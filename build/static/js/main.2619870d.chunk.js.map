{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Results.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","props","filter","handleChange","value","onChange","PersonForm","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","Results","persons","map","person","name","toLowerCase","includes","number","id","onClick","deletePerson","baseUrl","personsService","getAll","axios","get","then","res","data","addNewPerson","personObj","post","delete","updatePerson","newPerson","put","Notification","notificationStyle","message","backgroundColor","border","borderRadius","color","fontSize","fontWeight","style","App","useState","setPersons","useEffect","initialPersons","catch","err","alert","setNewName","setNewNumber","setFilter","errorMessage","setErrorMessage","target","event","preventDefault","check","find","undefined","window","confirm","newPersons","setTimeout","concat","toString","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2619870d.chunk.js","sourcesContent":["\r\nconst Filter = (props) => {\r\n    const { filter, handleChange } = props;\r\n    return (\r\n    <p>filter shown with <input value={filter} onChange={handleChange}/></p>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n    const {\r\n        addPerson, newName, \r\n        handleNameChange, newNumber, \r\n        handleNumberChange \r\n    } = props;\r\n\r\n    return (\r\n        <form onSubmit={addPerson}>\r\n            <div>\r\n                name: <input value={newName} onChange={handleNameChange}/>\r\n            </div>\r\n            <div>\r\n                 number: <input value={newNumber} onChange={handleNumberChange} />\r\n            </div>   \r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import React from 'react';\r\n\r\nconst Results = (props) => {\r\n  \r\n    return (\r\n      <div>\r\n        {props.persons.map(person => {\r\n          if (person.name.toLowerCase().includes(props.filter.toLowerCase())){\r\n             // console.log(`person: ${person.id}`)\r\n            return (\r\n              <p key={person.name}>{person.name} {person.number} <button value={person.id} onClick={props.deletePerson}>delete</button></p>\r\n            )\r\n            \r\n          }\r\n          return null;\r\n        })}\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Results","import axios from 'axios';\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAll = () => {\r\n    const req = axios.get(baseUrl);\r\n    return req.then(res => res.data)\r\n};\r\n\r\nconst addNewPerson = personObj => {\r\n    const req = axios.post(baseUrl, personObj)\r\n    return req.then(res => res.data)\r\n}\r\n\r\nconst deletePerson = id => {\r\n    const req = axios.delete(`${baseUrl}/${id}`)\r\n    return req.then(res => res.data)\r\n}\r\n\r\nconst updatePerson = (id, newPerson) => {\r\n    const req = axios.put(`${baseUrl}/${id}`, newPerson);\r\n    return req.then(res => res.data)\r\n}\r\n\r\nconst personsService = {\r\n    getAll,\r\n    addNewPerson,\r\n    deletePerson,\r\n    updatePerson\r\n}\r\n\r\n\r\nexport default personsService;","\r\n\r\nconst Notification = ({message}) => {\r\n    let notificationStyle;\r\n    \r\n    if (message === null) {\r\n        return null\r\n    } else {\r\n        if (!message.includes('Information of')) {\r\n           \r\n         notificationStyle = {\r\n            backgroundColor: 'lightgrey',\r\n            border: '1px solid green',\r\n            borderRadius: '5px',\r\n            color: 'green',\r\n            fontSize: 20,\r\n            fontWeight: 700\r\n        }\r\n    } else {\r\n        notificationStyle = {\r\n            backgroundColor: 'lightgrey',\r\n            border: '1px solid red',\r\n            borderRadius: '5px',\r\n            color: 'red',\r\n            fontSize: 20,\r\n            fontWeight: 700\r\n        }\r\n    }\r\n    return (\r\n        <div style={notificationStyle}>\r\n            {message}\r\n        </div>\r\n    )\r\n }\r\n\r\n}\r\nexport default Notification;","import React, { useState, useEffect } from 'react';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Results from './components/Results';\nimport personsService from './services/persons';\nimport Notification from './components/Notification';\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([\n  ])\n\n  useEffect(() => {\n    \n    personsService  \n    .getAll()\n    .then(initialPersons => {\n       // console.log(initialPersons)\n      setPersons(initialPersons)\n    })\n    .catch(err => alert(err))\n  }, [])\n\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter ] = useState(''); \n  const [errorMessage, setErrorMessage ] = useState(null)\n\n  const handleNameChange = ({target}) => {\n    setNewName(target.value);\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    //console.log('button clicked', event.target)\n    const personObj  = {\n      name: newName,\n      number: newNumber\n    }\n    const check = persons.find(person => person.name === personObj.name)\n    //console.log(check)\n    if (check !== undefined) {\n     const result = window.confirm(`${personObj.name} is already added to phonebook. Replace the old number with the new one?`)\n     if (result) {\n       personsService\n        .updatePerson(check.id, personObj)\n        .then(newPersons => {\n          setPersons(persons.map(person => person.id !== check.id ? person : newPersons))\n          setErrorMessage(`Updated ${personObj.name}`)\n          setTimeout(() => {\n            setErrorMessage (null)\n          }, 5000)\n        })\n        .catch(err => {\n          setErrorMessage(`Information of ${personObj.name} has already been removed from the server`)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n        })\n      }\n     return null\n    } else {\n    personsService\n      .addNewPerson(personObj)\n      .then(newPerson => {\n        setPersons(persons.concat(newPerson))\n        setNewName('');\n        setNewNumber('')\n        setErrorMessage(`Added ${personObj.name}`)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })\n      .catch((err) => {\n        alert('Unknown Error')\n      })\n    \n    }\n    \n  }\n\n  const deletePerson = (event) => {\n    //console.log(event.target.value)\n    const person = persons.find(person => {\n      //console.log(`personsid: ${person.id}`)\n      return person.id.toString() === event.target.value;\n      \n    })\n    //console.log(`person: ${person.name}`)\n    const result = window.confirm(`delete ${person.name}?`)\n    if (result) {\n    personsService\n      .deletePerson(event.target.value)\n      .then(\n       setPersons(persons.filter(person => person.id.toString() !== event.target.value))\n      )\n    }\n    return null;\n  }\n\n  const handleNumberChange = ({target}) => {\n    setNewNumber(target.value);\n  }\n\n  const handleFilter = ({target}) => {\n    setFilter(target.value.toLowerCase());\n\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Filter filter={filter} handleChange={handleFilter}/>\n      <h3>add a person</h3>\n      <Notification message={errorMessage}/><br />\n      <PersonForm \n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n        addPerson={addPerson}\n      />\n      <h2>Numbers</h2>\n      <Results persons={persons} filter={filter} deletePerson={deletePerson}/>\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}